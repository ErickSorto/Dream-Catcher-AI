plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1' apply false
    id 'kotlin-parcelize'
}


android {
    compileSdk 34

    defaultConfig {
        applicationId "org.ballistic.dreamjournalai"
        minSdk 23
        targetSdk 34
        versionCode 43
        versionName "1.1.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        buildConfigField "String", "API_KEY", "\"${properties.getProperty('API_KEY')}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.6'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'org.ballistic.dreamjournalai'

    kapt {
        correctErrorTypes true
    }
}



dependencies {
    // AndroidX dependencies
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.compose.material3:material3:1.2.0-beta01'
    implementation "androidx.compose.material3:material3-window-size-class:1.2.0-beta01"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.navigation:navigation-compose:2.7.6"
    implementation "androidx.room:room-ktx:2.6.1"

    // Testing and Debugging
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    //noinspection GradleDependency
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    testImplementation 'junit:junit:4.13.2'

    // Compose Extensions and Libraries
    implementation 'com.github.SmartToolFactory:Compose-AnimatedList:0.5.1'
    implementation "com.google.accompanist:accompanist-pager:0.19.0"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.19.0"
    implementation "com.maxkeppeler.sheets-compose-dialogs:core:1.1.0"
    implementation "com.maxkeppeler.sheets-compose-dialogs:calendar:1.1.0" // CALENDAR
    implementation "com.maxkeppeler.sheets-compose-dialogs:clock:1.1.0" // CLOCK
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-functions-ktx:20.4.0'
    implementation 'com.google.firebase:firebase-storage'

    // Google Play Services
    implementation "com.google.android.gms:play-services-auth:20.7.0"
    implementation 'com.google.android.gms:play-services-ads:22.6.0'

    // Hilt (Dependency Injection)
    def hilt_version = "2.49"
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    kapt("androidx.hilt:hilt-compiler:1.1.0")

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.2"

    // Networking
    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.11.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'io.ktor:ktor-client-okhttp:2.3.2'

    // OpenAI
    implementation platform('com.aallam.openai:openai-client-bom:3.6.1')
    implementation 'com.aallam.openai:openai-client'

    // Other Libraries
    implementation "com.github.skydoves:cloudy:0.1.2"
    implementation "org.parceler:parceler-api:1.1.12"
    kapt "org.parceler:parceler:1.1.12"

    // Image Loading
    implementation("io.coil-kt:coil:2.2.2")
    implementation("io.coil-kt:coil-compose:2.2.2")

    // Billing Client
    implementation 'com.android.billingclient:billing:6.1.0'
}